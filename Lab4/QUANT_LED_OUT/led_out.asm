// -- DO NOT CHANGE ANYTHING UNTIL THE **** LINE--//
ORG 0H
LJMP MAIN
ORG 100H
MAIN:
MOV P1, #1FH
CALL TAKE_INP
CALL QUANT_ENC
CALL LED_DISP
HERE: SJMP HERE
ORG 130H
// *****************
DELAY:
//DELAY is 4sec
	MOV R6, #40
	LOOP_OUT:
		MOV R5, #100
		LOOP_IN:
			ACALL delay_1ms
		DJNZ R5, LOOP_IN
	DJNZ R6, LOOP_OUT
	RET

TAKE_INP:

	MOV R0,#70H
	SETB P1.4
	ACALL DELAY
	ACALL DELAY
	CLR P1.4
	MOV @R0,P1
	SETB P1.5
	ACALL DELAY
	ACALL DELAY
	CLR P1.5
	MOV A,P1
	SWAP A
	ADD A,@R0
	MOV @R0,A
	INC R0
	
	SETB P1.4
	SETB P1.5
	ACALL DELAY
	ACALL DELAY
	CLR P1.4
	CLR P1.5
	MOV @R0,P1
	SETB P1.6
	ACALL DELAY
	ACALL DELAY
	CLR P1.6
	MOV A,P1
	SWAP A
	ADD A,@R0
	MOV @R0,A
	INC R0
	
	SETB P1.4
	SETB P1.6
	ACALL DELAY
	ACALL DELAY
	CLR P1.4
	CLR P1.6
	MOV @R0,P1
	SETB P1.5
	SETB P1.6
	ACALL DELAY
	ACALL DELAY
	CLR P1.5
	CLR P1.6
	MOV A,P1
	SWAP A
	ADD A,@R0
	MOV @R0,A
	INC R0
	
	SETB P1.4
	SETB P1.5
	SETB P1.6
	ACALL DELAY
	ACALL DELAY
	CLR P1.4
	CLR P1.5
	CLR P1.6
	MOV @R0,P1
	SETB P1.7
	ACALL DELAY
	ACALL DELAY
	CLR P1.7
	MOV A,P1
	SWAP A
	ADD A,@R0
	MOV @R0,A
	INC R0
	
QUANT_ENC:
	MOV R3, #04H
	MOV R1,#74H
	MOV R0,#70H
	ENCODE_LOOP:
		MOV B, #40H
		MOV A,@R0
		DIV AB
		INC A
		MOV R4,A
		DJNZ R4,CHECK1
			MOV @R1, #10H
		CHECK1: DJNZ R4,CHECK2
			MOV @R1, #20H
		CHECK2: DJNZ R4,CHECK3
			MOV @R1, #40H
		CHECK3: DJNZ R4,CHECK4
			MOV @R1, #80H
		CHECK4:
		INC R1
		INC R0
		DJNZ R3, ENCODE_LOOP
		RET
LED_DISP:
	LED_OUT_LOOP:
		MOV R3, #04H
		MOV R1,#74H
		LED_LOOP:
			MOV P1,@R1
			ACALL DELAY
			INC R1
			DJNZ R3,LED_LOOP
			SJMP LED_OUT_LOOP
		
RET


delay_1ms:
push 00h
mov r0, #4
h2: acall delay_250us
djnz r0, h2
pop 00h
ret
delay_250us:
push 00h
mov r0, #244
h1: djnz r0, h1
pop 00h
ret

END